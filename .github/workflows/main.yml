name: Build and Deploy to ECR

on:
  push:
    branches:
      - "main"

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.set-matrix.outputs.targets }}
      bin_name: ${{ steps.cargo-metadata.outputs.bin_name }}
      should-release: ${{ steps.next-release.outputs.should-release }}
      version: ${{ steps.next-release.outputs.version }}
      repo_name: ${{ steps.github-metadata.outputs.repo_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get next release version, if any
        id: next-release
        uses: ./.github/actions/semantic-release
        with:
          dry-run: "true"
          pat: ${{ secrets.PAT_TOKEN }}

      - name: Write repository name, lowercased
        id: github-metadata
        run: echo "repo_name=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT
  
  dockerize:
    name: dockerize
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker metadata
        id: docker-metadata
        env:
          DOCKER_METADATA_PR_HEAD_SHA: true
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ needs.prepare.outputs.repo_name }}
          tags: |
            type=raw,value=${{ needs.prepare.outputs.version }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: ./
          load: false
          push: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          platforms: ${{ steps.set-variables.outputs.platforms }}
          provenance: false
  release:
    name: release
    needs:
      - prepare
      - dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: "npm"

      - name: Install Node dependencies
        run: |
          npm ci --no-fund --no-audit --ignore-scripts

      - name: PublishÃ¥ next release
        id: next-release
        run: |
          npx semantic-release --no-ci
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs:
      - prepare
      - dockerize
      - release
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - uses: iarekylew00t/regctl-installer@v1
        with:
          regctl-release: v0.5.7

      - name: Set repository name, lowercased
        run: echo "REPO=${GITHUB_REPOSITORY@L}" >> "${GITHUB_ENV}"

      - name: Deploy to ECR
        run: |
       regctl image copy ghcr.io/${{ env.REPO }}:${{ needs.prepare.outputs.version }} ${{ steps.login-ecr.outputs.registry }}/modbus-exporter:${{ needs.prepare.outputs.version }}
